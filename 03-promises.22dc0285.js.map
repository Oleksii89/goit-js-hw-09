{"mappings":"YAAA,IAAMA,EAASC,SAASC,cAAc,SACtCF,EAAOG,iBAAiB,UAGxB,SAAkBC,GAChBA,EAAIC,iBACJ,IAAgCC,EAAAN,EAAOO,SAA/BC,EAAwBF,EAAxBG,MAAOC,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OAOrB,IANAC,EAAc,CACZC,MAAOC,OAAON,EAAMO,OACpBC,KAAMF,OAAOJ,EAAKK,OAClBE,OAAQH,OAAOH,EAAOI,SAIVF,MAAQ,GACpBD,EAAYI,KAAO,GACnBJ,EAAYK,QAAU,EAEtB,OAAOC,OAAOC,MACX,gFAGL,IAAK,IAAIC,EAAI,EAAGA,GAAKR,EAAYK,OAAQG,GAAK,EACxCA,GAAK,IACPR,EAAYC,OAASD,EAAYI,MAGnCK,EAAcD,EAAGR,EAAYC,OAC1BS,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUf,EAAKc,EAALd,MACjBgB,QAAQC,IAAI,uBAAwCC,OAAfH,EAAS,QAAYG,OAANlB,EAAM,M,IAE3DmB,OAAM,SAAAL,G,IAAGC,EAAQD,EAARC,SAAUf,EAAKc,EAALd,MAClBgB,QAAQC,IAAI,sBAAqCC,OAAfH,EAAS,QAAYG,OAANlB,EAAM,M,OA9B/D,IAAIG,EAAc,GAmClB,SAASS,EAAcG,EAAUf,GAC/B,OAAO,IAAIoB,SAAQ,SAACC,EAAKC,GACvB,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAI,CAAEN,WAAUf,UAEhBsB,EAAI,CAAEP,WAAUf,S,GAEjBA,E","sources":["src/js/03-promises.js"],"sourcesContent":["const formEl = document.querySelector('.form');\nformEl.addEventListener('submit', onSubmit);\nlet inputedData = '';\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  const { delay, step, amount } = formEl.elements;\n  inputedData = {\n    Delay: Number(delay.value),\n    Step: Number(step.value),\n    Amount: Number(amount.value),\n  };\n\n  if (\n    inputedData.Delay < 0 ||\n    inputedData.Step < 0 ||\n    inputedData.Amount <= 0\n  ) {\n    return window.alert(\n      `First delay and Delay step cannot be less than 0, Amount cannot be 0 or less`\n    );\n  }\n  for (let i = 1; i <= inputedData.Amount; i += 1) {\n    if (i >= 2) {\n      inputedData.Delay += inputedData.Step;\n    }\n\n    createPromise(i, inputedData.Delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        res({ position, delay }); // Fulfill\n      } else {\n        rej({ position, delay }); // Reject\n      }\n    }, delay);\n  });\n}\n"],"names":["$ce04d3a99e08e73b$var$formEl","document","querySelector","addEventListener","evt","preventDefault","_elements","elements","delay1","delay","step","amount","$ce04d3a99e08e73b$var$inputedData","Delay","Number","value","Step","Amount","window","alert","i","$ce04d3a99e08e73b$var$createPromise","then","param","position","console","log","concat","catch","Promise","res","rej","shouldResolve","Math","random","setTimeout"],"version":3,"file":"03-promises.22dc0285.js.map"}